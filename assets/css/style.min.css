/*!
 * KookGallery.com
 * Coming Soon page for KookGallery.com
 * https://HosseinKarami.com
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:url(../img/back.jpg) 50% no-repeat fixed;background-size:cover}body{font:300 13px/1.6 IRANSans,Helvetica,Arial;color:#fff;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}.nav ul{list-style:none}.hero{text-align:center;min-height:100vh}.hero.center{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.hero h2{font-family:IRANSans;font-weight:400;font-size:2rem;margin:0;padding:2rem}@media only screen and (min-device-width:20em) and (max-device-width:30em){.hero h2{font-size:2rem}}@media only screen and (min-width:30.1em){.hero h2{font-size:2.5rem}}@media only screen and (min-width:48em){.hero h2{font-size:2.5rem}}@media only screen and (min-width:62.5em){.hero h2{font-size:2.5rem}}@media only screen and (min-width:81.25em){.hero h2{font-size:2.5rem}}.hero h4{font-family:IRANSans;font-weight:400;font-size:1.7rem;margin:0}@media only screen and (min-device-width:20em) and (max-device-width:30em){.hero h4{font-size:1.7rem}}@media only screen and (min-width:30.1em){.hero h4{font-size:2rem}}@media only screen and (min-width:48em){.hero h4{font-size:2rem}}@media only screen and (min-width:62.5em){.hero h4{font-size:2rem}}@media only screen and (min-width:81.25em){.hero h4{font-size:2rem}}.hero .footer_social{margin:0;padding:0;list-style:none;padding-top:5rem}.hero .footer_social,.hero .footer_social li{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.hero .footer_social li{-ms-flex-direction:column;flex-direction:column;margin:0 .3rem}.hero .footer_social li.instagram a svg{width:28px;height:28px}.hero .footer_social li.telegram a svg{width:46px;height:46px}@font-face{font-family:IRANSans;font-style:normal;font-weight:700;src:url(../fonts/eot/IRANSansWeb_Bold.eot);src:url(../fonts/eot/IRANSansWeb_Bold.eot?#iefix) format("embedded-opentype"),url(../fonts/woff2/IRANSansWeb_Bold.woff2) format("woff2"),url(../fonts/woff/IRANSansWeb_Bold.woff) format("woff"),url(../fonts/ttf/IRANSansWeb_Bold.ttf) format("truetype")}@font-face{font-family:IRANSans;font-style:normal;font-weight:500;src:url(../fonts/eot/IRANSansWeb_Medium.eot);src:url(../fonts/eot/IRANSansWeb_Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/woff2/IRANSansWeb_Medium.woff2) format("woff2"),url(../fonts/woff/IRANSansWeb_Medium.woff) format("woff"),url(../fonts/ttf/IRANSansWeb_Medium.ttf) format("truetype")}@font-face{font-family:IRANSans;font-style:normal;font-weight:300;src:url(../fonts/eot/IRANSansWeb_Light.eot);src:url(../fonts/eot/IRANSansWeb_Light.eot?#iefix) format("embedded-opentype"),url(../fonts/woff2/IRANSansWeb_Light.woff2) format("woff2"),url(../fonts/woff/IRANSansWeb_Light.woff) format("woff"),url(../fonts/ttf/IRANSansWeb_Light.ttf) format("truetype")}@font-face{font-family:IRANSans;font-style:normal;font-weight:200;src:url(../fonts/eot/IRANSansWeb_UltraLight.eot);src:url(../fonts/eot/IRANSansWeb_UltraLight.eot?#iefix) format("embedded-opentype"),url(../fonts/woff2/IRANSansWeb_UltraLight.woff2) format("woff2"),url(../fonts/woff/IRANSansWeb_UltraLight.woff) format("woff"),url(../fonts/ttf/IRANSansWeb_UltraLight.ttf) format("truetype")}@font-face{font-family:IRANSans;font-style:normal;font-weight:400;src:url(../fonts/eot/IRANSansWeb.eot);src:url(../fonts/eot/IRANSansWeb.eot?#iefix) format("embedded-opentype"),url(../fonts/woff2/IRANSansWeb.woff2) format("woff2"),url(../fonts/woff/IRANSansWeb.woff) format("woff"),url(../fonts/ttf/IRANSansWeb.ttf) format("truetype")}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
